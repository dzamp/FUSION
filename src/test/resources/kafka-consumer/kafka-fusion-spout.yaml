# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# Test ability to wire together shell spouts/bolts
---

# topology definition
# name to be used when submitting
name: "kafka-topology"
config:
  topology.workers: 1
  topology.debug: true


components:

  - id: "fusionScheme"
    className: "consumers.FusionScheme"
    configMethods:
      - name : "withClasses"
        args :
        # this is the way to pass an array to method with varargs
          - [ "java.lang.String", "java.lang.Integer",  "java.lang.Long"]
      - name : "withRegex"
        args : [","]
      - name : "withFields"
        args :
        # this is the way to pass an array to method with varargs
          - ["id","value","timestamp"]

  - id: "keyValueSchemeasMultiScheme"
    className: "org.apache.storm.kafka.KeyValueSchemeAsMultiScheme"
    constructorArgs:
      - ref: "fusionScheme"



  - id: "zkHosts"
    className: "org.apache.storm.kafka.ZkHosts"
    constructorArgs:
      - "localhost:2181"



  - id: "spoutConfig"
    className: "org.apache.storm.kafka.SpoutConfig"
    constructorArgs:
      # brokerHosts
      - ref: "zkHosts"
      # topic
      - "health"
      # zkRoot
      - "/health"
      # id
      - "storm-consumer"
    properties:
      - name: "bufferSizeBytes"
        value: 4194304
      - name: "fetchSizeBytes"
        value: 4194304
      - name: "scheme"
        ref: "keyValueSchemeasMultiScheme"



# NOTE: We may want to consider some level of spring integration. For example, allowing component references
# to a spring `ApplicationContext`.

# topology configuration
# this will be passed to the submitter as a map of config options
#

# spout definitions
spouts:
  - id: "kafka-spout"
    className: "org.apache.storm.kafka.KafkaSpout"
    constructorArgs:
      - ref: "spoutConfig"

# bolt definitions
bolts:
  - id: "object-counter"
    className: "algorithms.ObjectCounterBolt"


#stream definitions
# stream definitions define connections between spouts and bolts.
# note that such connections can be cyclical
# custom stream groupings are also supported

streams:
  - name: "kafka --> count" # name isn't used (placeholder for logging, UI, etc.)
    from: "kafka-spout"
    to: "object-counter"
    grouping:
      type: SHUFFLE


